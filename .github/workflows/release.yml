name: Release

on:
  push:
    tags:
      - "*"

env:
  IMAGE_NAME: dylanowen/wasm-pack

jobs:
  ensure_main:
    name: Ensure Main Branch
    runs-on: ubuntu-latest
    outputs:
      is_main: ${{ steps.is_main.outputs.is_main }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Is Main
        id: is_main
        run: |
          if git branch --contains tags/1.70.0 2>/dev/null | grep -q 'main' ; then
            >&2 echo "Our tag IS on the main branch"
            echo "is_main=true" >> $GITHUB_OUTPUT
          else
            >&2 echo "Our tag IS NOT the main branch"
            echo "is_main=false" >> $GITHUB_OUTPUT
          fi

  build_amd64:
    name: Build for AMD64
    runs-on: ubuntu-latest
    needs: ensure_main
    if: needs.ensure_main.outputs.is_main == 'true'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # minimal
            type=semver,pattern={{version}}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_arm64:
    name: Build For Arm64
    runs-on: ubuntu-latest
    needs: ensure_main
    if: false # TODO re-enable if: needs.check_main.outputs.is_main == 'true'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # minimal
            type=semver,pattern={{version}}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
